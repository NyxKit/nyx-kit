import{d,m as A,h as $,z as w,C as N,r as b,c as L,w as U,H as E,k as H,e as K,g as h,q as _,l as R,j as m,t as F,p as I,u as V,n as G,T as J}from"./vue.esm-bundler-CW8VNZbY.js";import{a as S,N as i,b as f}from"./common-D0hF21is.js";import{N as y}from"./style-DbUoAtrk.js";import{u as Q}from"./useTeleportPosition-CGa1nf0n.js";import{g as W}from"./keydict-BK3rIzaC.js";import{_ as z}from"./NyxButton-4u1vuCQ7.js";import"./number-BSU09LqX.js";import"./useNyxProps-DzKGUGIw.js";const X=["data-position"],Y={class:"nyx-tooltip__content-wrapper"},u=d({__name:"NyxTooltip",props:A({text:{},theme:{default:f.Default},variant:{default:S.Solid},size:{default:i.Medium},position:{default:y.Top},disabled:{type:Boolean,default:!1},trigger:{default:"hover"},forceUpdate:{type:[Boolean,Number],default:!1}},{modelValue:{type:Boolean,default:!1},modelModifiers:{}}),emits:["update:modelValue"],setup(t){const e=t,o=$(t,"modelValue");w();const v=N("elTooltip"),c=N("elTooltipContent"),{cssVariables:k,computedPosition:B,updateCssVariables:M}=Q(v,c,{position:b(e.position),gap:b(i.Medium)}),x=()=>o.value=!0,T=()=>o.value=!1,q=()=>e.trigger==="hover"&&x(),C=()=>e.trigger!=="manual"&&T(),D=()=>e.trigger==="click"&&x(),P=()=>e.trigger!=="manual"&&T(),O=L(()=>e.forceUpdate);return U(O,()=>M()),(g,ee)=>{const j=E("click-outside");return H((h(),K("div",{class:"nyx-tooltip",ref:"elTooltip",onMouseover:q,onMouseleave:C,onClick:D},[_(g.$slots,"default"),(h(),R(J,{to:"body"},[m("div",{class:G(["nyx-tooltip__content",[`theme-${e.theme}`,`variant-${e.variant}`,`size-${e.size}`,{"nyx-tooltip__content--open":o.value}]]),"data-position":V(B),style:I(V(k)),ref:"elTooltipContent"},[m("div",Y,[_(g.$slots,"tooltip-content",{},()=>[m("span",null,F(e.text),1)])])],14,X)]))],32)),[[j,P]])}}});u.__docgenInfo={exportName:"default",displayName:"NyxTooltip",description:"",tags:{},props:[{name:"text",required:!1,type:{name:"union",elements:[{name:"string"},{name:"number"}]}},{name:"theme",required:!1,type:{name:"NyxTheme"},defaultValue:{func:!1,value:"NyxTheme.Default"}},{name:"variant",required:!1,type:{name:"NyxVariant"},defaultValue:{func:!1,value:"NyxVariant.Solid"}},{name:"size",required:!1,type:{name:"NyxSize"},defaultValue:{func:!1,value:"NyxSize.Medium"}},{name:"position",required:!1,type:{name:"NyxPosition"},defaultValue:{func:!1,value:"NyxPosition.Top"}},{name:"disabled",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"trigger",required:!1,type:{name:"union",elements:[{name:'"click"'},{name:'"hover"'},{name:'"manual"'}]},defaultValue:{func:!1,value:"'hover'"}},{name:"forceUpdate",required:!1,type:{name:"union",elements:[{name:"boolean"},{name:"number"}]},defaultValue:{func:!1,value:"false"}}],slots:[{name:"default"},{name:"tooltip-content"}],sourceFiles:["/Users/arnedecant/Documents/projects/nyx-kit/src/components/NyxTooltip/NyxTooltip.vue"]};const ue={title:"Components/NyxTooltip",component:u,argTypes:{theme:{control:{type:"select"},options:Object.values(f)},position:{control:{type:"select"},options:Object.values(y)},size:{control:{type:"select"},options:Object.values(i)}}},Z=t=>d({components:{NyxTooltip:u,NyxButton:z},setup(){return{args:t}},template:`
    <nyx-tooltip v-bind="args" :text="'Tooltip content'">
      <nyx-button>{{ Hover me }}</nyx-button>
    </nyx-tooltip>
  `}),p=(t,e)=>()=>d({components:{NyxTooltip:u,NyxButton:z},setup(){const o=Object.values(e);return{prop:t,values:o,getLabel:c=>W(e,c)}},template:`
    <div class="flex wrap">
      <nyx-tooltip
        v-for="value of values"
        :key="value"
        v-bind="{ [prop]: value }"
        :text="getLabel(value)"
      ><nyx-button v-bind="{ [prop]: value }">{{ getLabel(value) }}</nyx-button></nyx-tooltip>
    </div>
  `}),a=Z({}),s=p("theme",f),l=p("position",y),n=p("variant",S),r=p("size",i);a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:"Template({})",...a.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:"TemplateAll('theme', NyxTheme)",...s.parameters?.docs?.source}}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:"TemplateAll('position', NyxPosition)",...l.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:"TemplateAll('variant', NyxVariant)",...n.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:"TemplateAll('size', NyxSize)",...r.parameters?.docs?.source}}};const pe=["Default","Themes","Positions","Variants","Sizes"];export{a as Default,l as Positions,r as Sizes,s as Themes,n as Variants,pe as __namedExportsOrder,ue as default};
