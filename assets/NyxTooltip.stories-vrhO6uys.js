import{d,m as P,u as q,t as A,A as _,r as g,D as $,e as j,a as V,o as m,k as h,h as O,b as S,y as L,q as w,B as E,l as z,n as K,T as R}from"./vue.esm-bundler-BOhbys1Y.js";import{b as k,a as r,c as y}from"./common-BBtRsYrk.js";import{u as F,N as f}from"./useTeleportPosition-CSHUcrKa.js";import{g as H}from"./keydict-BK3rIzaC.js";import{_ as B}from"./NyxButton-DpqmHhXQ.js";const I=["data-position"],U={class:"nyx-tooltip__content-wrapper"},G={key:0},p=d({__name:"NyxTooltip",props:P({text:{},theme:{default:y.Default},variant:{default:k.Solid},size:{default:r.Medium},position:{default:f.TopCenter},disabled:{type:Boolean,default:!1}},{modelValue:{type:Boolean,default:!1},modelModifiers:{}}),emits:["update:modelValue"],setup(t){const e=t,o=q(t,"modelValue");A();const x=_("elTooltip"),c=_("elTooltipContent"),{cssVariables:D,computedPosition:C}=F(x,c,{position:g(e.position),gap:g(r.Medium)}),v=()=>o.value=!0,T=()=>o.value=!1;return(N,b)=>{const M=$("click-outside");return j((m(),V("div",{class:"nyx-tooltip",ref:"elTooltip",onMouseover:v,onMouseleave:T,onClick:v},[h(N.$slots,"default"),(m(),O(R,{to:"body"},[S("div",{class:K(["nyx-tooltip__content",[`theme-${e.theme}`,`variant-${e.variant}`,`size-${e.size}`,{"nyx-tooltip__content--open":o.value}]]),"data-position":z(C),style:E(z(D)),ref:"elTooltipContent"},[S("div",U,[e.text?(m(),V("span",G,L(e.text),1)):h(N.$slots,"tooltip-content",{key:1},()=>[b[0]||(b[0]=w("NyxTooltip"))])])],14,I)]))],32)),[[M,T]])}}});p.__docgenInfo={exportName:"default",displayName:"NyxTooltip",description:"",tags:{},props:[{name:"text",required:!1,type:{name:"string"}},{name:"theme",required:!1,type:{name:"NyxTheme"},defaultValue:{func:!1,value:"NyxTheme.Default"}},{name:"variant",required:!1,type:{name:"NyxVariant"},defaultValue:{func:!1,value:"NyxVariant.Solid"}},{name:"size",required:!1,type:{name:"NyxSize"},defaultValue:{func:!1,value:"NyxSize.Medium"}},{name:"position",required:!1,type:{name:"NyxPosition"},defaultValue:{func:!1,value:"NyxPosition.TopCenter"}},{name:"disabled",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],slots:[{name:"default"},{name:"tooltip-content"}],sourceFiles:["/Users/arnedecant/Documents/projects/nyx-kit/src/components/NyxTooltip/NyxTooltip.vue"]};const ee={title:"Components/NyxTooltip",component:p,argTypes:{theme:{control:{type:"select"},options:Object.values(y)},position:{control:{type:"select"},options:Object.values(f)},size:{control:{type:"select"},options:Object.values(r)}}},J=t=>d({components:{NyxTooltip:p,NyxButton:B},setup(){return{args:t}},template:`
    <nyx-tooltip v-bind="args" :text="'Tooltip content'">
      <nyx-button>{{ Hover me }}</nyx-button>
    </nyx-tooltip>
  `}),u=(t,e)=>()=>d({components:{NyxTooltip:p,NyxButton:B},setup(){const o=Object.values(e);return{prop:t,values:o,getLabel:c=>H(e,c)}},template:`
    <div class="flex wrap">
      <nyx-tooltip
        v-for="value of values"
        :key="value"
        v-bind="{ [prop]: value }"
        :text="getLabel(value)"
      ><nyx-button v-bind="{ [prop]: value }">{{ getLabel(value) }}</nyx-button></nyx-tooltip>
    </div>
  `}),a=J({}),s=u("theme",y),l=u("position",f),n=u("variant",k),i=u("size",r);a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:"Template({})",...a.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:"TemplateAll('theme', NyxTheme)",...s.parameters?.docs?.source}}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:"TemplateAll('position', NyxPosition)",...l.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:"TemplateAll('variant', NyxVariant)",...n.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:"TemplateAll('size', NyxSize)",...i.parameters?.docs?.source}}};const te=["Default","Themes","Positions","Variants","Sizes"];export{a as Default,l as Positions,i as Sizes,s as Themes,n as Variants,te as __namedExportsOrder,ee as default};
