import{d as u,m as h,h as v,c as k,e as f,k as N,j as x,f as g,v as _,t as C,n as z,u as V,g as y}from"./vue.esm-bundler-CW8VNZbY.js";import{b as m,N as d}from"./common-D0hF21is.js";import{g as T,a as S,_ as D}from"./NyxFormField-XHbVulPp.js";import{u as q}from"./useNyxProps-4Ss1XjVC.js";import{g as B}from"./keydict-BK3rIzaC.js";const L=["disabled","aria-label","id"],M=["for"],c=u({__name:"NyxCheckbox",props:h({label:{default:""},disabled:{type:Boolean,default:!1},size:{default:d.Medium},theme:{default:m.Default},id:{},checkmark:{default:"✔"},pixel:{type:Boolean,default:!1}},{modelValue:{type:Boolean,default:!1},modelModifiers:{}}),emits:["update:modelValue"],setup(a){const e=a,l=v(a,"modelValue"),{classList:i}=q(e),s=k(()=>e.id??`nyx-checkbox-${T(16)}`);return(F,t)=>(y(),f("div",{class:z(["nyx-checkbox",V(i)])},[N(x("input",{type:"checkbox","onUpdate:modelValue":t[0]||(t[0]=p=>l.value=p),disabled:e.disabled,"aria-label":e.label,id:s.value},null,8,L),[[_,l.value]]),x("span",{class:"nyx-checkbox__checkbox",onClick:t[1]||(t[1]=p=>l.value=!l.value)}),e.label?(y(),f("label",{key:0,for:s.value,class:"nyx-checkbox__label"},C(e.label),9,M)):g("",!0)],2))}});c.__docgenInfo={exportName:"default",displayName:"NyxCheckbox",description:"",tags:{},props:[{name:"label",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"disabled",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"size",required:!1,type:{name:"NyxSize"},defaultValue:{func:!1,value:"NyxSize.Medium"}},{name:"theme",required:!1,type:{name:"NyxTheme"},defaultValue:{func:!1,value:"NyxTheme.Default"}},{name:"id",required:!1,type:{name:"string"}},{name:"checkmark",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'✔'"}},{name:"pixel",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],sourceFiles:["/Users/arnedecant/Documents/projects/nyx-kit/src/components/NyxCheckbox/NyxCheckbox.vue"]};const K={title:"Components/NyxCheckbox",component:c,argTypes:{theme:{control:{type:"select"},options:Object.values(m)},size:{control:{type:"select"},options:Object.values(d)}}},j=a=>u({components:{NyxCheckbox:c},setup(){return{args:a}},template:`
    <nyx-checkbox v-bind="args" :placeholder="'NyxCheckbox'" />
  `}),b=(a,e)=>()=>u({components:{NyxCheckbox:c,NyxForm:D,NyxFormField:S},setup(){const l=Object.values(e);return{prop:a,values:l,getLabel:s=>B(e,s)}},template:`
    <nyx-form>
      <nyx-form-field v-for="value of values" :key="value" :label="getLabel(value)">
        <template #default="{ id }">
          <nyx-checkbox
            v-bind="{ [prop]: value }"
            :placeholder="getLabel(value)"
            :id="id"
            :label="'I agree for the terms and conditions for ' + getLabel(value)"
          />
        </template>
      </nyx-form-field>
    </nyx-form>
  `}),o=j({}),r=b("theme",m),n=b("size",d);o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:"Template({})",...o.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:"TemplateAll('theme', NyxTheme)",...r.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:"TemplateAll('size', NyxSize)",...n.parameters?.docs?.source}}};const U=["Default","Themes","Sizes"];export{o as Default,n as Sizes,r as Themes,U as __namedExportsOrder,K as default};
