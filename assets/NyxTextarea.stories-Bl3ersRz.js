import{d as p,m as v,e as N,a as b,g as h,E as T,f as q,n as V,o as z}from"./vue.esm-bundler-DZGhvwA6.js";import{N as c,a as y,b as f}from"./common-BBDHxksy.js";import{g as S}from"./keydict-BK3rIzaC.js";import{a as B,_ as k}from"./NyxFormField-D9TSChw3.js";const $=["placeholder","disabled","readonly","maxlength","minlength","pattern","required","autocomplete","autofocus","id"],d=p({__name:"NyxTextarea",props:v({theme:{default:f.Default},variant:{default:y.Outline},size:{default:c.Medium},disabled:{type:Boolean},readonly:{type:Boolean},required:{type:Boolean},autofocus:{type:Boolean},placeholder:{},autocomplete:{},minlength:{},maxlength:{},pattern:{},id:{}},{modelValue:{},modelModifiers:{}}),emits:v(["click","focus","blur"],["update:modelValue"]),setup(t,{emit:r}){const e=t,o=r,l=N(t,"modelValue");return(g,a)=>(z(),b("div",{class:V(["nyx-textarea",[`theme-${e.theme}`,`variant-${e.variant}`,`size-${e.size}`]])},[h(q("textarea",{placeholder:e.placeholder,disabled:e.disabled,readonly:e.readonly,maxlength:e.maxlength,minlength:e.minlength,pattern:e.pattern,required:e.required,autocomplete:e.autocomplete,autofocus:e.autofocus,id:g.id,"onUpdate:modelValue":a[0]||(a[0]=s=>l.value=s),onClick:a[1]||(a[1]=s=>o("click")),onFocus:a[2]||(a[2]=s=>o("focus")),onBlur:a[3]||(a[3]=s=>o("blur"))},null,40,$),[[T,l.value]])],2))}});d.__docgenInfo={exportName:"default",displayName:"NyxTextarea",description:"",tags:{},props:[{name:"theme",required:!1,type:{name:"NyxTheme"},defaultValue:{func:!1,value:"NyxTheme.Default"}},{name:"variant",required:!1,type:{name:"NyxVariant"},defaultValue:{func:!1,value:"NyxVariant.Outline"}},{name:"size",required:!1,type:{name:"NyxSize"},defaultValue:{func:!1,value:"NyxSize.Medium"}},{name:"disabled",required:!1,type:{name:"boolean"}},{name:"readonly",required:!1,type:{name:"boolean"}},{name:"required",required:!1,type:{name:"boolean"}},{name:"autofocus",required:!1,type:{name:"boolean"}},{name:"placeholder",required:!1,type:{name:"string"}},{name:"autocomplete",required:!1,type:{name:"string"}},{name:"minlength",required:!1,type:{name:"number"}},{name:"maxlength",required:!1,type:{name:"number"}},{name:"pattern",required:!1,type:{name:"string"}},{name:"id",required:!1,type:{name:"string"}}],events:[{name:"click"},{name:"focus"},{name:"blur"}],sourceFiles:["/Users/arnedecant/Documents/projects/nyx-kit/src/components/NyxTextarea/NyxTextarea.vue"]};const F={title:"Components/NyxTextarea",component:d,argTypes:{theme:{control:{type:"select"},options:Object.values(f)},variant:{control:{type:"select"},options:Object.values(y)},size:{control:{type:"select"},options:Object.values(c)}}},D=t=>p({components:{NyxTextarea:d},setup(){return{args:t}},template:`
    <nyx-textarea v-bind="args" :placeholder="'NyxTextarea'" />
  `}),x=(t,r)=>()=>p({components:{NyxTextarea:d,NyxForm:k,NyxFormField:B},setup(){const e=Object.values(r);return{prop:t,values:e,getLabel:l=>S(r,l)}},template:`
    <nyx-form>
      <nyx-form-field v-for="value of values" :key="value" :label="getLabel(value)">
        <template #default="{ id }">
          <nyx-textarea
            v-bind="{ [prop]: value }"
            :placeholder="getLabel(value)"
            :id="id"
          />
        </template>
      </nyx-form-field>
    </nyx-form>
  `}),n=D({}),m=x("theme",f),i=x("variant",y),u=x("size",c);n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:"Template({})",...n.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:"TemplateAll('theme', NyxTheme)",...m.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:"TemplateAll('variant', NyxVariant)",...i.parameters?.docs?.source}}};u.parameters={...u.parameters,docs:{...u.parameters?.docs,source:{originalSource:"TemplateAll('size', NyxSize)",...u.parameters?.docs?.source}}};const A=["Default","Themes","Variants","Sizes"];export{n as Default,u as Sizes,m as Themes,i as Variants,A as __namedExportsOrder,F as default};
